# Code and commments generated by ChatGPT and then polished


def detect_marker_start(string):
  # Keep track of the last four characters received
  last_four = ""
  
  # Iterate over the characters in the string
  for i in range(len(string)):
    # Append the current character to the last_four string
    last_four += string[i]
    
    # If the length of last_four is greater than four, remove the first character
    if len(last_four) > 4:
      last_four = last_four[1:]
    
    # If all characters in last_four are different, we have found a marker
    if len(set(last_four)) == 4:
      return i + 1 # Return the position of the marker

  # If we reach this point, no marker was found
  return -1


def detect_marker_message(string):
  # Keep track of the last 14 characters received
  last_fourteen = ""
  
  # Iterate over the characters in the string
  for i in range(len(string)):
    # Append the current character to the last_fourteen string
    last_fourteen += string[i]
    
    # If the length of last_fourteen is greater than 14, remove the first character
    if len(last_fourteen) > 14:
      last_fourteen = last_fourteen[1:]
    
    # If all characters in last_fourteen are different, we have found a marker
    if len(set(last_fourteen)) == 14:
      return i + 1 # Return the position of the marker
      
  # If we reach this point, no marker was found
  return -1


# Open the input file
with open("input.txt") as file:
  # Read the file line by line
  for line in file:

    # Strip the leading and trailing whitespace from the line
    line = line.strip()
    
    # Apply the detect_marker function to the line
    marker_start = detect_marker_start(line)
    marker_message = detect_marker_message(line)
    
    # Print the result
    print(marker_start)
    print(marker_message)
